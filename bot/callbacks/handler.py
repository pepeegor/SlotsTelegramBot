from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from bot.data.config import file_ids
from bot.keyboards.inline import user, slot
from bot.keyboards.reply import start
from bot.utils.states import Form
from bot.utils.utils import push_data

router = Router()

que = set()


@router.callback_query(F.data == "continue")
async def get_username(callback_query: CallbackQuery, state: FSMContext):
    if callback_query.from_user.username:
        await state.update_data(username="@"+callback_query.from_user.username)
        await get_slot(callback_query, state)
        return await callback_query.answer()
    await state.set_state(Form.username)
    text = """‚úÖ–û—Ç–ª–∏—á–Ω–æ. –° —Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç—è–º–∏ —Ä–∞–∑–æ–±—Ä–∞–ª–∏—Å—å, —Ç–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ username."""
    await callback_query.message.answer(text)
    await callback_query.answer()


@router.message(Form.username)
async def form_name(message: Message, state: FSMContext):
    if message.text[0] == "@":
        await state.update_data(username=message.text)
        text = f"‚úÖ{message.text} - –ø—Ä–∏–Ω—è—Ç–æ.‚úÖ"
        result = await message.answer_animation(
            file_ids.get("confirm_username"),
            reply_markup=user,
            caption=text
        )
        print(result.animation.file_id, "confirm username")
    else:
        await message.answer(f"{message.text} - –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º. –í–≤–µ–¥–∏ username, –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å @.")


@router.callback_query(F.data == 'change_username')
async def change_username(callback_query: CallbackQuery, state: FSMContext):
    await state.set_state(Form.username)
    await callback_query.message.answer("–í–≤–µ–¥–∏ –Ω–æ–≤—ã–π username.")


@router.callback_query(F.data == "username_cont")
async def get_slot(callback_query: CallbackQuery, state: FSMContext):
    await state.set_state(Form.slot)
    text = "üéÅ –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç —Å–ª–æ—Ç–∞ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –ø–æ–∫—É–ø–∫–∏."
    await callback_query.message.answer(text)
    await callback_query.answer()


@router.message(Form.slot)
async def form_slot(message: Message, state: FSMContext):
    if all(char in "abcdefghijklmnopqrstuvwxyz " for char in message.text.lower()):
        await state.update_data(slot=message.text)
        text = f"‚úÖ{message.text} - –ø—Ä–∏–Ω—è—Ç–æ.‚úÖ"
        result = await message.answer_animation(
            file_ids.get("confirm_slot"),
            reply_markup=slot,
            caption=text
        )
        print(result.animation.file_id, "confirm slot")
    else:
        await message.answer(f"{message.text} - –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º."
                             " –í—Å–µ –±—É–∫–≤—ã –¥–æ–∂–Ω—ã –±—ã—Ç—å –Ω–∞ –ª–∞—Ç–∏–Ω–∏—Ü–µ! –û—Ç–ø—Ä–∞–≤—å –Ω–æ–≤—ã–π —Å–ª–æ—Ç, –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–æ–¥ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è.")


@router.callback_query(F.data == 'change_slot')
async def change_slot(callback_query: CallbackQuery, state: FSMContext):
    await state.set_state(Form.slot)
    await callback_query.message.answer("üéÅ –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Å–ª–æ—Ç–∞ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –ø–æ–∫—É–ø–∫–∏.")
    await callback_query.answer()


@router.callback_query(F.data == 'slot_cont')
async def push_all(callback_query: CallbackQuery, state: FSMContext):
    user_data = await state.get_data()
    push_id = user_data.get("username")
    push_d = user_data.get("slot")
    res = await push_data(str(push_id), str(push_d))
    if res == 0:
        text = "‚úÖ –£—Ä–∞ —Ç–≤–æ—è –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –°–≤–æ—é –∑–∞—è–≤–∫—É —Ç—ã –º–æ–∂–µ—à—å –æ—Ç—Å–ª–µ–¥–∏—Ç—å –ø–µ—Ä–µ–π–¥—è –ø–æ —Å—Å—ã–ª–∫–µ " \
            "—Å —Ç–∞–±–ª–∏—Ü–µ–π –∑–∞—è–≤–æ–∫ –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–æ—Å—Ç–µ —Å —Ä–æ–∑—ã–≥—Ä—ã—à–µ–º –≤ TG - @casino_malaya."
        result = await callback_query.message.answer_animation(
            file_ids.get("confirm_request"),
            reply_markup=start,
            caption=text
        )
        print(result.animation.file_id, "confirm request")
    elif res == 1:
        text = "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∂–µ username —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª –∑–∞—è–≤–∫—É!"
        await callback_query.message.answer(text, reply_markup=start)
        await callback_query.answer()
    elif res == 2:
        text = "–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, —Ç–∞–∫–æ–π —Å–ª–æ—Ç —É–∂–µ –∑–∞–Ω—è—Ç!"
        await callback_query.message.answer(text, reply_markup=start)
        await callback_query.answer()
    await state.clear()
